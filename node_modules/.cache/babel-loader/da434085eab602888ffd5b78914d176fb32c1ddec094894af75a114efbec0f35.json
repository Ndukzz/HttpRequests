{"ast":null,"code":"var _jsxFileName = \"/home/ndukz/Documents/ReactProjects/Http requests - 15/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = async () => {\n    try {\n      //TRY-CATCH STATEMENT  \n      setIsLoading(true);\n      setError(null);\n      const response = await fetch(\"https://swapi.dev/api/films\");\n\n      // CHECK IF THERES AN ERROR BEFORE HANDLING THE RESPONSE\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const data = await response.json();\n      const transformedMoviesList = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMoviesList);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  };\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No movies to Display!!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 17\n  }, this);\n  if (error) {\n    content;\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Content...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }, this);\n  }\n  {}\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 45\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Content...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }, this), !isLoading && movies.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Movies to Display!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 57\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CfvScDUKET3vus1Fik+Z8i4ujsU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMoviesList","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","content","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","onClick","length","_c","$RefreshReg$"],"sources":["/home/ndukz/Documents/ReactProjects/Http requests - 15/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [ movies, setMovies ] = useState([])\n  const [ isLoading, setIsLoading ] = useState(false)\n  const [ error, setError ] = useState(null)\n\n  const fetchMoviesHandler = async() => {\n    try {   //TRY-CATCH STATEMENT  \n      setIsLoading(true)\n      setError(null)\n\n      const response = await fetch(\"https://swapi.dev/api/films\")\n\n      // CHECK IF THERES AN ERROR BEFORE HANDLING THE RESPONSE\n      if (!response.ok) {\n        throw new Error('Something went wrong!')\n      }\n\n      const data = await response.json()\n\n      const transformedMoviesList = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        }\n      })\n      setMovies(transformedMoviesList)\n    } catch (error) {\n      setError(error.message)\n    }\n    setIsLoading(false)\n  }\n\n  let content = <p>No movies to Display!!</p>;\n  if(error) {\n    content \n  }\n  if(isLoading){\n    content = <p>Loading Content...</p>\n  }  {\n\n  }\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {isLoading && <p>Loading Content...</p>}\n        {!isLoading && movies.length === 0 && !error && <p>No Movies to Display!!</p>}\n        {!isLoading && error && <p>{error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAAEC,MAAM,EAAEC,SAAS,CAAE,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAEQ,SAAS,EAAEC,YAAY,CAAE,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAEU,KAAK,EAAEC,QAAQ,CAAE,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMY,kBAAkB,GAAG,MAAAA,CAAA,KAAW;IACpC,IAAI;MAAI;MACNH,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;;MAE3D;MACA,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,MAAMC,qBAAqB,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAACC,SAAS,IAAI;QAC1D,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UAAU;UACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;UACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;UACpCC,WAAW,EAAEN,SAAS,CAACO;QACzB,CAAC;MACH,CAAC,CAAC;MACFtB,SAAS,CAACY,qBAAqB,CAAC;IAClC,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACoB,OAAO,CAAC;IACzB;IACArB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,IAAIsB,OAAO,gBAAG5B,OAAA;IAAA6B,QAAA,EAAG;EAAsB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC3C,IAAG1B,KAAK,EAAE;IACRqB,OAAO;EACT;EACA,IAAGvB,SAAS,EAAC;IACXuB,OAAO,gBAAG5B,OAAA;MAAA6B,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACrC;EAAG,CAEH;EAGA,oBACEjC,OAAA,CAACJ,KAAK,CAACsC,QAAQ;IAAAL,QAAA,gBACb7B,OAAA;MAAA6B,QAAA,eACE7B,OAAA;QAAQmC,OAAO,EAAE1B,kBAAmB;QAAAoB,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACVjC,OAAA;MAAA6B,QAAA,GACG,CAACxB,SAAS,IAAIF,MAAM,CAACiC,MAAM,GAAG,CAAC,iBAAIpC,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACjE5B,SAAS,iBAAIL,OAAA;QAAA6B,QAAA,EAAG;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACtC,CAAC5B,SAAS,IAAIF,MAAM,CAACiC,MAAM,KAAK,CAAC,IAAI,CAAC7B,KAAK,iBAAIP,OAAA;QAAA6B,QAAA,EAAG;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC5E,CAAC5B,SAAS,IAAIE,KAAK,iBAAIP,OAAA;QAAA6B,QAAA,EAAItB;MAAK;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAAC/B,EAAA,CA1DQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}